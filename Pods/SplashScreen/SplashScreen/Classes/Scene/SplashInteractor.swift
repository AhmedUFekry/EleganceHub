//
//  SplashInteractor.swift
//  SmartMic
//
//  Created by Marcel Mendes Filho on 09/08/19.
//  Copyright (c) 2019 Marcel Mendes Filho. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SplashBusinessLogic
{
    func getSplash(app: String, version: String, key: String, localization: String, hostName: String, splashEndpoint: String, httpHeader: String, imageHostName: String, imagePath: String)
}

protocol SplashDataStore
{
    var splash: Splash? { get set }
    var splashImages: Array<UIImage> { get set }
}
 
class SplashInteractor: SplashBusinessLogic, SplashDataStore
{
    var presenter: SplashPresentationLogic?
    var worker: SplashWorker?
    var splash: Splash?
    var splashImages: Array<UIImage>
    
    init(){
        self.splashImages = Array(repeating: UIImage(), count: 0)
    }
    
    func getSplash(app: String, version: String, key: String, localization: String, hostName: String, splashEndpoint: String, httpHeader: String, imageHostName: String, imagePath: String) {
        if worker == nil{
            worker = SplashWorker()
        }
        
        worker?.getSplash(app: app, version: version, key: key, localization: localization, hostName: hostName, splashEndpoint: splashEndpoint, httpHeader: httpHeader) { (result, returnedSplash, error) in
            self.splash = returnedSplash
            if result{
                if let splashItems = self.splash?.splashItems{
                    self.splashImages = Array(repeating: UIImage(), count: splashItems.count)

                    for splashItem in splashItems{
                        if let iconName = splashItem?.icon{

                            // seek icon in cache
                            if let imageData = UserDefaults.standard.data(forKey: iconName),
                                let image = UIImage(data: imageData){
                                
                                if let index = splashItems.firstIndex(of: splashItem){
                                    self.splashImages[index] = image
                                    self.presenter?.updateSplash()
                                }
                            } else { // retrieve icon from server
                                self.worker?.downloadImage(iconName: iconName, httpHeader: httpHeader, imageHostName: imageHostName, imagePath: imagePath, completion: { (image, error) in
                                    if let image = image{
                                        
                                        // save icon in cache
                                        if let data = image.pngData(){
                                            UserDefaults.standard.set(data, forKey: iconName)
                                        }
                                        
                                        if let index = splashItems.firstIndex(of: splashItem){
                                            self.splashImages[index] = image
                                            self.presenter?.updateSplash()
                                        }
                                    }
                                })
                            }
                        }
                    }
                }
            } else {
                self.presenter?.dismissSplashScreen()
            }
        }
        
    }
}
